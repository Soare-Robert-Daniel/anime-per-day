---
interface Props {
  daySlug: string;
  animeList: { title: string; query?: string }[];
}

const { daySlug, animeList } = Astro.props;
const title = daySlug.toUpperCase();

const torrentQueryBase = "https://nyaa.si/?f=0&c=1_2&q=";
const animeListItems = animeList.map((anime) => {
  return {
    ...anime,
    torrentLink: `${torrentQueryBase}${encodeURIComponent(anime?.query ?? anime.title)}`,
  };
});
---

<div data-day={daySlug} class="mb-4 font-mono">
  <p class="font-bold bg-gray-800 text-white px-2 py-1 inline-block">
    {title}
  </p>
  <div class="bg-white flex flex-col gap-0 last:rounded-b-lg">
    {
      animeListItems.map((anime) => (
        <div class="flex items-center gap-0 p-2">
          <span class="grow text-xl text-pretty">{anime.title}</span>
          <a href={anime.torrentLink} target="_blank">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              width="24"
              role="img"
            >
              <title>Go to Download</title>
              <circle cx="12" cy="12" r="11" fill="#3498db" />
              <path
                d="M12 6v8M8 11l4 4 4-4"
                stroke="white"
                stroke-width="2"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
              <path
                d="M8 16h8"
                stroke="white"
                stroke-width="2"
                stroke-linecap="round"
              />
            </svg>
          </a>
        </div>
      ))
    }
  </div>
</div>
